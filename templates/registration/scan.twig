{% extends 'layouts/private.twig' %}

{% block styles %}
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.35.4/css/bootstrap-dialog.min.css"/>
{% endblock %}

{% block menu %}
    <a href="#">
        <i class="icon-user-follow fa-2x" aria-hidden="true"></i>
    </a>
    <a href="{{ path_for('product.registrations.all', {'id': product.product_id}) }}">
        <i class="icon-magnifier fa-2x" aria-hidden="true"></i>
    </a>
    <a href="{{ path_for('registration.verification', {'id': product.product_id}) }}">
        <i class="icon-camera fa-2x" aria-hidden="true"></i>
    </a>
    <a href="#" class="logo">
        <img src="/images/trackit-nav.png" alt="Trackit" class="img-responsive img-block">
    </a>
{% endblock %}

{% block content %}
    <div class="play">
        <p class="text-center">
            <img src="{{ product.img }}" alt="{{ product.title }}" class="img-responsive">
        </p>
        <div class="container">
            <div class="row">
                <div class="col-xs-12">
                    <h2 class="text-center">{{ product.name }}</h2>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-4 col-sm-offset-4">
                    <p class="text-center">
                        <a href="#0"><i class="icon-camera fa-5x" aria-hidden="true"></i></a><br>
                        {# <select class="form-control"></select> #}
                    </p>
                </div>
            </div>
        </div>
    </div>
    <video id="video" autoplay="true" style="display:none;"></video>
    <canvas id="canvas"></canvas>
{% endblock %}

{% block footer %}
    <footer>
        <div class="container-fluid">
            <div class="row">
                <div class="col-xs-12 col-sm-6">
                    <span id="product-name"></span>
                </div>
                <div class="col-xs-4 col-sm-2">
                    <i class="fa fa-users" aria-hidden="true"></i> <span id="count-registrations"></span>/<span id="count-verifications"></span>
                </div>
                <div class="col-xs-4 col-sm-2">
                    <i class="fa fa-graduation-cap" aria-hidden="true"></i> <span id="count-speakers"></span>/<span id="count-verified-speakers"></span>
                </div>
                <div class="col-xs-4 col-sm-2">
                    <i class="fa fa-star" aria-hidden="true"></i> <span id="count-vips"></span>/<span id="count-verified-vips"></span>
                </div>
            </div>
        </div>
    </footer>
{% endblock %}

{% block scripts %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.35.4/js/bootstrap-dialog.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/webrtc-adapter/3.3.3/adapter.min.js"></script>
    <script src="{{ base_url() }}/js/jsQR.js"></script>
    <script>
        var decode = true;
        var info = function () {
            $.ajax({
                type: "GET",
                url: "/product/info/{{ product.product_id }}",
                dataType: "json",
                context: this,
                success: function(a) {
                    $('#product-name').text(a.name);
                    $('#count-registrations').text(a.registrations.all);
                    $('#count-verifications').text(a.verifications.all);
                    $('#count-speakers').text(a.registrations.speaker);
                    $('#count-verified-speakers').text(a.verifications.speaker);
                    $('#count-vips').text(a.registrations.vip);
                    $('#count-verified-vips').text(a.verifications.vip);
                },
                error: function(a) {
                    console.log(a);
                },
                complete: function() {
                    // Previous run complete, schedule the next run
                    setTimeout(info, 10000);
                }
            });
        }

        info();

        setTimeout(info, 10000);

        var video = document.getElementById("video");
        var canvas = document.getElementById("canvas");
        var context = canvas.getContext("2d");
        var width, height;

        var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||
            window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
        window.requestAnimationFrame = requestAnimationFrame;

        width = parseInt(canvas.style.width);
        height = parseInt(canvas.style.height);

        function decoderPlay() {
            var constraints;
            if (navigator.mozGetUserMedia) {
                constraints = {
                    video: true
                };
            } else {
                constraints = {
                    video: {
                        facingMode: {
                            exact: 'environment'
                        }
                    }
                };
            }
            navigator.mediaDevices.getUserMedia(constraints)
            .then(stream => successCallback(stream))
            .catch(e => console.log(e.name + ": "+ e.message));

            requestAnimationFrame(tick);
        }

        function successCallback(stream) {
            if (window.URL) {
                video.src = window.URL.createObjectURL(stream);
            } else if (video.srcObject !== undefined) {
                video.srcObject = stream;
            } else {
                video.src = stream;
            }
            video.onloadedmetadata = function(e) {
                width = this.videoWidth,
                height = this.videoHeight;

                console.log(width);
                console.log(height);

                canvas.width = width;
                canvas.height = height;
            };
        }

        function errorCallback() {}

        function tick() {
            requestAnimationFrame(tick);
            if (video.readyState === video.HAVE_ENOUGH_DATA) {
                // Load the video onto the canvas
                context.drawImage(video, 0, 0, width, height);
                // Load the image data from the canvas

                var imageData = context.getImageData(0, 0, width, height);
                var decoded = jsQR.decodeQRFromImage(imageData.data, imageData.width, imageData.height);

                if (decoded) {
                    var type, buttons, message, title;
                    if (decode === true) {
                        decode = false;
                        $.ajax({
                            type: "GET",
                            url: "/registration/verify/"+ decoded,
                            dataType: "json",
                            success: function(a) {
                                if (a.status == 'error') {
                                    type = BootstrapDialog.TYPE_DANGER;
                                    title = 'Error';
                                    message = '<h4>'+a.message+'</h4><p>'+decoded+'</p>';
                                    buttons = [{
                                        label: '<i class="fa fa-times-circle" aria-hidden="true"></i> Cerrar',
                                        cssClass: 'btn-primary btn-lg',
                                        action: function(dialog) {
                                            dialog.close();
                                        }
                                    }];
                                } else if (a.status == 'success') {
                                    type = BootstrapDialog.TYPE_SUCCESS;
                                    title = a.message;
                                    message = '<h4>'+a.user+'</h4><p>Â¿Va a <strong>asistir</strong> al almuerzo?</p><p>'+decoded+'</p>';
                                    buttons = [{
                                        label: '<i class="fa fa-check-circle" aria-hidden="true"></i> Si',
                                        cssClass: 'btn-success btn-lg',
                                        action: function(dialog) {
                                            dialog.close();
                                        }
                                    }, {
                                        label: '<i class="fa fa-ban" aria-hidden="true"></i> No',
                                        cssClass: 'btn-danger btn-lg',
                                        action: function(dialog) {
                                            dialog.close();
                                        }
                                    }];
                                }
                                BootstrapDialog.show({
                                    size: BootstrapDialog.SIZE_LARGE,
                                    title: title,
                                    message: message,
                                    buttons: buttons,
                                    type: type,
                                    onhidden: function(dialog) {
                                        decode = true;
                                        // decoder.play();
                                    }
                                });
                            },
                            error: function(a) {
                                console.log(a);
                            }
                        });
                    }
                }
            }
        }

        $('.play a').click(function(event) {
            event.preventDefault();
            $('.play').hide();
            decoderPlay();
        });
    </script>
{% endblock %}
